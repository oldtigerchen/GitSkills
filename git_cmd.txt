$ git config --global user.name "Your Name"
$ git config --global user.email "email@example.com"

git clone -b dev http://gaoudhiu.com

适当的文件夹下初始化
$ git init

$ git add readme.txt

$ git commit -m "此处写上有用的说明"

查看log
$ git log --pretty=oneline


查看文件内容
$ cat readme.txt

上一个版本就是HEAD^，上上一个版本就是HEAD^^，当然往上100个版本写100个^比较容易数不过来，所以写成HEAD~100。 
$ git reset --hard HEAD^
$ git reset --hard ba3bff11ccbfc9ec82d51456d110b39dd2779f90


确定要回到未来的哪个版本。
$ git reflog

工作区与暂存区
$ git status

只有放入暂存区的文件才会被提交

撤销修改
只是没有修改了文件但还没有 git add
$ git checkout -- readme.txt
已经使用了git add,但是还没有git commit -m "   "
$ git reset HEAD readme.txt
然后在使用:
git checkout -- readme.txt



删除（确定删除/误删）
$ git rm test.txt
$ git checkout -- test.txt

###################################远程仓库##################################

登陆GitHub，然后，在右上角找到“Create a new repo”按钮，创建一个新的仓库
$ git remote add origin git@server-name:path/repo-name.git
例如：$ git remote add origin git@github.com:oldtigerchen/learngit.git
如要删除origin：
$ git remote rm origin

关联后，使用命令
$ git push -u origin master第一次推送master分支的所有内容；
此后，每次本地提交后，只要有必要，就可以使用命令
$ git push origin master 推送最新修改

####SSH github建立密钥对#######
1）$ cd ~/.ssh    #ls来查看是否有文件id_rsa以及文件id_rsa.pub
2）$ ssh-keygen -t rsa -C "767275265@qq.com"    #途中会让你输入密码啥的，不需要管，一路回车即可
3）$ ssh -v git@github.com
4）$ ssh-agent -s
5）$ ssh-add /c/Users/FH/.ssh/id_rsa  #Linux的话直接$ ssh-add ~/.ssh/id_rsa
如果出现“Could not open a connection to your authentication agent.”：
$ eval `ssh-agent -s`
然后再$ ssh-add /c/Users/FH/.ssh/id_rsa 
6）$ cat  ~/.ssh/id_rsa.pub  #得到密钥
复制密钥到github ssh 设置中获得配对

远程仓库克隆
$ git clone git@github.com:oldtigerchen/GitSkills.git


##############分支创建及合并################################
查看分支：git branch

创建分支：git branch <name>

切换分支：git checkout <name>或者git switch <name>




创建+切换分支：git checkout -b <name>或者git switch -c <name>

合并某分支到当前分支：git merge <name>

删除分支：git branch -d <name>
#####################


#########################分支冲突##############################



























